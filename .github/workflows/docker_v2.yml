name: Docker CI/CD v2

on:
  push:
    branches:
      - none #feature-jm-sysadm #main
      #- '**'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/lab4-deploy
jobs:
    # DockerBuild:
    #     runs-on: ubuntu-latest
    #     steps:

    #     - name: Checkout code
    #       uses: actions/checkout@v4
    #       with:
    #           fetch-depth: 0

    #     - name: Docker Login
    #       uses: docker/login-action@v3
    #       with:
    #         username: ${{ secrets.DOCKER_USER }}
    #         password: ${{ secrets.DOCKER_PASSWORD }}
        
    #     - name: Docker Build
    #       run: |
    #         docker build -t jmsysadm/nodejs .
    
    #     - name: Push Docker
    #       run: |
    #         docker push jmsysadm/nodejs
    
    # DockerScan:
    #     needs: DockerBuild
    #     runs-on: ubuntu-latest
    #     steps:

    #     - name: Checkout code
    #       uses: actions/checkout@v4
    #       with:
    #           fetch-depth: 0
          
    #     - name: Docker Login
    #       uses: docker/login-action@v3
    #       with:
    #         username: ${{ secrets.DOCKER_USER }}
    #         password: ${{ secrets.DOCKER_PASSWORD }}
        
    #     - name: Pull Docker
    #       run: |
    #         docker pull jmsysadm/nodejs

    #     # - name: Run Trivy vulnerability scanner - Format table view
    #     #   uses: aquasecurity/trivy-action@master
    #     #   with:
    #     #     image-ref: 'jmsysadm/nodejs'
    #     #     format: 'table'

    #     - name: Run Trivy vulnerability scanner - Generate SARIF Report
    #       uses: aquasecurity/trivy-action@master
    #       id: TrivyScanReport
    #       with:
    #         scan-type: "image"
    #         format: 'table'
    #         image-ref: 'jmsysadm/nodejs'
    #         #output: 'trivy-results.sarif'
    #         severity: HIGH,CRITICAL
    #         ignore-unfixed: true
    #         exit-code: 0 # 1

    #     - name: Validar Ubicaci칩n de reporte
    #       run: |
    #         if [ -f "trivy-results.sarif" ]; then
    #           echo "Reporte trivy scan existente"
    #           echo "Activando full privilegios sobre el reporte"
    #           chmod 777 trivy-results.sarif
    #         else 
    #           echo "No se encuentra el reporte"
    #         fi

    #     # - name: Upload Test results
    #     #   uses: actions/upload-artifact@master
    #     #   with:
    #     #     name: TrivyScanReport
    #     #     path: ${{github.workspace}}/trivy-results.sarif
    publish:
      name: publish image
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: PWD
        run: pwd

      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Publish
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
    Deploy:
      needs: publish
      name: deploy image
      runs-on: ubuntu-latest

      steps:
      - name: install ssh keys
        # check this thread to understand why its needed:
        # <https://stackoverflow.com/a/70447517>
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
      - name: cleanup
        run: rm -rf ~/.ssh
  
      # # needs: DockerScan
      # runs-on: ubuntu-latest
      
      # steps:

      #   - name: Docker Login
      #     uses: docker/login-action@v3
      #     with:
      #       username: ${{ secrets.DOCKER_USER }}
      #       password: ${{ secrets.DOCKER_PASSWORD }}

      #       # Agregar l칩gica para evaluar si el docker est치 en running y eliminarlo antes de desplegar una nueva versi칩n
      #   - name: Deploy Docker Lab4-Container With App
      #     run: |
      #       # docker stop lab4-container
      #       # docker rm lab4-container
      #       docker run --name lab4-container -d -p 3000:3000 -t jmsysadm/nodejs